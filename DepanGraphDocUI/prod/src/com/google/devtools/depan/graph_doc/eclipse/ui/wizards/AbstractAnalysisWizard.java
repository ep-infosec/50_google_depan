/*
 * Copyright 2008 The Depan Project Authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package com.google.devtools.depan.graph_doc.eclipse.ui.wizards;

import com.google.devtools.depan.graph_doc.model.GraphDocument;
import com.google.devtools.depan.graph_doc.persistence.ResourceCache;
import com.google.devtools.depan.platform.eclipse.ui.wizards.AbstractNewDocumentWizard;
import com.google.devtools.depan.resource_doc.eclipse.ui.wizards.AbstractResouceWizardPage;

import org.eclipse.core.resources.IFile;
import org.eclipse.core.runtime.CoreException;
import org.eclipse.core.runtime.IProgressMonitor;

/**
 * A standard framework for implementing an DepAn analysis wizard.
 * With the accompanying {@link AbstractResouceWizardPage}, new forms of
 * dependency analysis can be implemented in two simple steps:
 * <ol>
 * <li>Create an source control to accept the users input.</li>
 * <li>Create a generateAnalysisGraph() method to generate the result.</li>
 * </ol>
 * Other routine steps, especially persistence, is handled by this class.
 */
public abstract class AbstractAnalysisWizard
    extends AbstractNewDocumentWizard<GraphDocument> {

  @Override
  protected int countSaveWork() {
    return 2;
  }

  /**
   * Save the graph generated by the
   * {@link AbstractAnalysisWizard#createNewDocument(IProgressMonitor)}}
   *  method.
   */
  @Override
  protected void saveNewDocument(
      IProgressMonitor monitor, GraphDocument graph)
      throws CoreException {
    monitor.setTaskName("Getting File...");

    final IFile file = getOutputFile();
    monitor.worked(1);

    monitor.setTaskName("Writing file...");

    ResourceCache.storeGraphDocument(file, graph);

    monitor.worked(1);
  }
}
